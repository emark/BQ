#!/usr/bin/env perl
use strict;
use lib "/home/hosting_locumtest/usr/local/lib/perl5";
use Mojolicious::Lite;
use DBI;
use utf8;
plugin 'mail';

open (DBCONF,"< app.conf") || die "Error open dbconfig file";
my @appconf=<DBCONF>;
close DBCONF;
chomp @appconf;
our $dbh = DBI->connect($appconf[0],$appconf[1],$appconf[2],
			{ PrintError => 1, RaiseError => 1 });
$dbh->{'mysql_enable_utf8'} = 1;
$dbh->do('SET NAMES utf8');

my $subscribe="\nКоманда BonusQuest\nwww.bonusquest.ru";
app->plugin(mail => {
    from     => 'robot@bonusquest.ru',
    encoding => 'base64',
    how      => 'smtp',
    howargs  => ['mail.locum.ru',AuthUser=>$appconf[3],AuthPass=>$appconf[4]],
  });
app->secret($appconf[5]);
app->hook(before_dispatch => sub {
               my $self = shift;
               $self->req->url->base(Mojo::URL->new(q{http://www.bonusquest.ru/}))
	       }
	  );

get '/' => sub {
  my $self = shift;
  my $partners=$dbh->selectrow_array("SELECT COUNT(SHOP.ID) FROM SHOP WHERE SHOP.STATUS=1");
  $self->stash(partners=>$partners);
  $self->render('index');
};

get '/:id' => [id=>qw/\d+/]=> sub{
  my $self=shift;
  my $pid=$self->param('id');
  $pid=$dbh->selectrow_array("SELECT SHOP.ID FROM SHOP WHERE SHOP.ID=$pid") || 0;
  if(!$pid){
    $self->stash(capt=>'Опрос не найден',message=>"Здесь пока нет ни опросов ни бонусов. Подождем...");
    return $self->render('robot') unless $pid;
  }
  my $shop=$dbh->selectall_hashref("SELECT SHOP.ID,SHOP.URL,SHOP.NAME AS SHOP FROM SHOP WHERE SHOP.ID='$pid'",'ID');
  my $question=$dbh->selectall_hashref("SELECT QUESTION.ID,QUESTION.CONTENT,QUESTION.TYPE,QUESTION.ANSWERS FROM QUESTION LEFT JOIN SHOP ON QUESTION.SHOPID=SHOP.ID WHERE QUESTION.QUIZ=1 AND SHOP.ID=$pid",'ID') || 0;
  my @months=('Months','Январь','Февраль','Март','Апрель','Май','Июнь','Июль','Август','Сентябрь','Октябрь','Ноябрь','Декабрь');
  my $selectmonths=[];
  my @lt=localtime;
  my $n=$lt[4]-1;
  for my $i(0..2){#For 3 last months
    $selectmonths->[$i]=[$months[$n],$n];
    $n++;
  }
  $self->stash(pid=>$pid,
               shop=>$shop,
               question=>$question,
               selectmonths=>$selectmonths,
               formmessage=>'',
               questmessage=>'');
  $self->render('quiz');
};

get '/quiz'=>sub{
  my $self=shift;
  my $url=$self->param('url');
  return $self->redirect_to('/') unless $url;
  $url=~s/http:\/\/||shop\.||www\.||store\.//g;#Drop subdomain from URL
  #Regexp utf encoding error
  #if($url !~ /^[А-Яа-яA-Za-z0-9.-]+\.[A-Za-z]{2,4}$/){
  #  $self->stash(message=>'Bad URL >:/');
  #  return $self->render('robot');
  #}
  $url=substr($url,0,50);#Cut url length to 50 char's
  my $pid=$dbh->selectrow_array("SELECT SHOP.ID FROM SHOP WHERE SHOP.URL='$url'") || 0;
  my $shop=$dbh->selectall_hashref("SELECT SHOP.ID,SHOP.URL,SHOP.NAME AS SHOP FROM SHOP WHERE SHOP.URL='$url'",'ID');
  my $question=$dbh->selectall_hashref("SELECT QUESTION.ID,QUESTION.CONTENT,QUESTION.TYPE,QUESTION.ANSWERS FROM QUESTION LEFT JOIN SHOP ON QUESTION.SHOPID=SHOP.ID WHERE QUESTION.QUIZ=1 AND SHOP.URL='$url'",'ID');
  if(!$pid){
    $self->stash(capt=>'Бонус не найден',message=>"Магазин $url пока не предоставляет бонусы.");
    return $self->render('robot') unless $pid;
  }
  my @months=('Months','Январь','Февраль','Март','Апрель','Май','Июнь','Июль','Август','Сентябрь','Октябрь','Ноябрь','Декабрь');
  my $selectmonths=[];
  my @lt=localtime;
  my $n=$lt[4]-1;
  for my $i(0..2){#For 3 last months
    $selectmonths->[$i]=[$months[$n],$n];
    $n++;
  }
  $self->stash(pid=>$pid,
               shop=>$shop,
               question=>$question,
               selectmonths=>$selectmonths,
               formmessage=>'',
               questmessage=>'');
  $self->render('quiz');
};

post '/quiz'=>sub{
  my $self=shift;
  #return $self->redirect_to('/') unless $self->param('pid');#Defend from double refresh
  my $pid=$self->param('pid');
  my $param = $self->req->params->to_hash;
  my $answer='';
  my $orderid='';
  my $sth;
  my @ref;
  my $SQL='';
  my @char=('a'..'z','A'..'Z','1'..'9');
  my $bonuscode='';
  my $formvalidate='';
  my $questvalidate='';
  
  my $shop=$dbh->selectall_hashref("SELECT SHOP.ID,SHOP.URL,SHOP.NAME AS SHOP FROM SHOP WHERE SHOP.ID='$pid'",'ID');
  my $question=$dbh->selectall_hashref("SELECT QUESTION.ID,QUESTION.CONTENT,QUESTION.TYPE,QUESTION.ANSWERS FROM QUESTION LEFT JOIN SHOP ON QUESTION.SHOPID=SHOP.ID WHERE QUESTION.QUIZ=1 AND SHOP.ID=$pid",'ID') || 0;
  my $quizcheck=$dbh->selectall_arrayref("SELECT QUESTION.ID FROM QUESTION WHERE QUESTION.SHOPID=$pid AND QUESTION.QUIZ=1");
    
  #Validation rules    
  if(!$param->{'ordernum'}){
    $formvalidate=$formvalidate.'Введите номер заказа';
  }elsif($param->{'email'} !~/^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$/){
    $formvalidate=$formvalidate.'Укажите корректный e-mail';
  }elsif(!$param->{'tosagree'}){
    $formvalidate=$formvalidate.'Не приняты условия Пользовательского соглашения';
  }
  foreach my $key(@{$quizcheck}){
    if(!$param->{$key->[0]}){
      $questvalidate='Есть неотвеченные вопросы';
    }
  }  
  
  if(!$formvalidate && !$questvalidate){
    #Generate bonuscode
    foreach(1..8){
      $bonuscode.=$char[int(rand(60))];
    }
    
    #Create order code
    $dbh->do("INSERT INTO ORDERS (ID,STATUS,SYSDATE,ORDERMONTH,NUMBER,EMAIL) VALUES (NULL,0,NOW(),$param->{'ordermonth'},\"$param->{'ordernum'}\",\"$param->{'email'}\")") || die $dbh->errstr;
    $orderid=$dbh->last_insert_id('','',"ORDERS",'ID');
    $sth=$dbh->prepare("SELECT QUESTION.ID AS QID FROM QUESTION WHERE QUESTION.SHOPID=$pid AND QUESTION.QUIZ=1");
    $sth->execute;
    
    #Record answer to DB
    while(@ref=$sth->fetchrow_array){
      $answer=join(';',$self->param($ref[0]));
      $dbh->do("INSERT INTO ANSWER (ID,QUESTIONID,ORDERID,CONTENT,SYSDATE) VALUES (NULL,$ref[0],$orderid,\"$answer\",NOW())") || die $dbh->errstr;
    }
    $self->session(quizid=>0);
    $self->mail(to=>$param->{'email'},
                subject=>"Ваш бонусквест от магазина ".$shop->{$pid}{'URL'},
                data=>"Приветствуем!\n\nВы приняли участие в опросе от магазина ".$shop->{$pid}{'SHOP'}." http://".$shop->{$pid}{'URL'}.
                "\nВ благодарность за ваши ответы магазин дарит вам бонус.\nБонус будет активирован сразу после обработки данных опроса. Это займет немного времени.\nОб активации бонуса мы сразу же вас оповестим.\nНомер вашего опроса: $orderid\nСпасибо за то, что вы с нами!\n".$subscribe
                );
    $self->redirect_to('thankyou.html');
  }else{
    
    # Validation is not OK
    my @months=('Months','Январь','Февраль','Март','Апрель','Май','Июнь','Июль','Август','Сентябрь','Октябрь','Ноябрь','Декабрь');
    my $selectmonths=[];
    my @lt=localtime;
    my $n=$lt[4]-1;
    for my $i(0..2){#For 3 last months
      $selectmonths->[$i]=[$months[$n],$n];
      $n++;
    }
    $self->stash(pid=>$pid,
                 shop=>$shop,
                 selectmonths=>$selectmonths,
                 formmessage=>$formvalidate,
                 questmessage=>$questvalidate,
                 question=>$question);
    $self->render('quiz');
  }
};

get '/thankyou'=>sub{
  my $self=shift;
  $self->stash(capt=>'Спасибо за ответы',message=>'Мы отправили вам письмо на указанный адрес электронной почты.');
  $self->render('robot');
};

post '/balance'=>sub{
  my $self=shift;
  my $email=$self->param('email');
  return $self->redirect_to('/') unless $email;
  if($email !~ /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$/){
    $self->stash(capt=>'Ошибка написания',message=>'Вы неверно указали адрес электронной почты.');
    return $self->render('robot');
  }
  my $balance=$dbh->selectall_arrayref("SELECT ORDERS.ID,SHOP.NAME,SHOP.URL FROM ORDERS LEFT JOIN ANSWER ON ORDERS.ID=ANSWER.ORDERID LEFT JOIN QUESTION ON ANSWER.QUESTIONID=QUESTION.ID LEFT JOIN SHOP ON QUESTION.SHOPID=SHOP.ID WHERE ORDERS.STATUS=2 AND ORDERS.EMAIL=\"$email\" GROUP BY ORDERS.ID") || undef;
  my $mailmessage='';
  if($balance->[0]){
    my $n=1;
    $mailmessage="Приветствуем!\nВы или возможно кто-то другой попросил прислать список действующих бонусов.\nИтак, ваши бонусы:\n";
    foreach my $key(@{$balance}){
      $mailmessage=$mailmessage."$n. Бонус от магазина $key->[1], http://$key->[2]\n";
      $n++;
    }
    if($n<6){
      my $x=6-$n;
      $mailmessage=$mailmessage."\nДля получения подарка осталось собрать всего $x бонуса.\nКак заработать бонус смотрите здесь http://www.bonusquest.ru/help.html";
    }else{
      $mailmessage=$mailmessage."\nПоздравляем, у вас достаточно бонусов для получения подарка.\nСписок подарков здесь http://www.bonusquest.ru/prizes.html";
    }
    $self->mail(to=>$email,
                subject=>'Список действующих бонусов',
                data=>$mailmessage.$subscribe);
  }
  $self->stash(capt=>'Ваш баланс отправлен',message=>'Список подтвержденных бонусов отправлен на указанный адрес электронной почты.');
  $self->render('robot');
};

get '/partners'=>sub{
  my $self=shift;
  my $shop=$dbh->selectall_hashref("SELECT SHOP.ID,SHOP.NAME,SHOP.URL,SHOP.DESCRIPTION FROM SHOP WHERE SHOP.STATUS=1 ORDER BY SHOP.URL",'ID');
  $self->stash(shop=>$shop);
  $self->render('partners');
};

post '/sendclaim'=>sub{
  my $self=shift;
  my $bonuscode=$self->param('bonuscode') || 0;
  my $description=$self->param('description');
  my $message='';
  my $bonuscodeid=$dbh->selectrow_array("SELECT ORDERS.ID FROM ORDERS WHERE ORDERS.ID='$bonuscode'") || 0;
  if($bonuscodeid){
    $dbh->do("INSERT INTO CLAIM (ID,BONUSID,DESCRIPTION,SDATE) VALUES (NULL,$bonuscodeid,\"$description\",NOW())") || die $dbh->err;
    $message='Спасибо за обращение. Мы сообщим вам о результатах на адрес электронной почты указанный в бонусе.';
  }else{
    $message="Код бонуса <b>$bonuscode</b> неверен. Укажите правильный код.";
  }
  $self->stash(capt=>'Получение претензии',
               message=>$message);
  $self->render('robot');
};

app->start;