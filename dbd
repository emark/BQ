#!/usr/bin/env perl
use strict;
use lib "/home/hosting_locumtest/usr/local/lib/perl5";
use Mojolicious::Lite;
use DBI;
use utf8;
plugin 'mail';

open (DBCONF,"< app.conf") || die "Error open dbconfig file";
my @appconf=<DBCONF>;
close DBCONF;
chomp @appconf;
our $dbh = DBI->connect($appconf[0],$appconf[1],$appconf[2],
			{ PrintError => 1, RaiseError => 1 });
$dbh->{'mysql_enable_utf8'} = 1;
$dbh->do('SET NAMES utf8');

my $subscribe="\nКоманда BonusQuest\nwww.bonusquest.ru";
app->plugin(mail => {
    from     => 'robot@bonusquest.ru',
    encoding => 'base64',
    how      => 'smtp',
    howargs  => ['mail.locum.ru',AuthUser=>$appconf[3],AuthPass=>$appconf[4]],
  });
app->secret($appconf[6]);
app->hook(before_dispatch => sub {
               my $self = shift;
               #$self->req->url->base(Mojo::URL->new(q{http://partner.bonusquest.ru/}))
	       }
	  );

get '/' => sub {
  my $self = shift;
	$self->stash(message=>'');
	return $self->redirect_to('/quiz.html') if $self->session('pid');
	$self->render('partner_login');
};

get '/login' => sub {
  my $self = shift;
	$self->stash(message=>'');
  $self->render('partner_login');
};

get '/logout'=>sub{
	my $self=shift;
	$self->session(pid=>'');
	$self->stash(message=>'');
	$self->render('partner_login');
};

post '/auth'=>sub{
  my $self = shift;
  my $param=$self->req->params->to_hash;
  my $pid=$dbh->selectrow_array("SELECT SHOP.ID FROM SHOP WHERE URL=\"$param->{'login'}\" AND PASS=\"$param->{'pass'}\" AND SHOP.STATUS=1") || undef;
  if($pid){
		$self->session(pid=>$pid,
									 url=>$param->{'login'});
		return $self->redirect_to('quiz.html');  
  }
  $self->stash(message=>'Ошибка при вводе логина или пароля');
	$self->render('partner_login');
};

get '/register'=>sub{
	my $self=shift;
	$self->stash(message=>'');
	$self->render('partner_register');
};

post '/register'=>sub{
	my $self=shift;
	my $param=$self->req->params->to_hash;
	$param->{'url'}=~s/(http:\/\/www\.)||(http:\/\/)||(www\.)//g;
	my $message='Укажите адрес магазина';
	my $check=$dbh->selectrow_array("SELECT 1 FROM SHOP WHERE URL=\"$param->{'url'}\" AND SHOP.STATUS=1") || undef;
	$message='Партнер уже зарегистрирован' unless !$check;
	if($param->{'email'} !~ /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$/){
		$message='Вы неверно указали адрес электронной почты.';
		$check=1;
	}
	if(!$check && $param->{'url'} && $param->{'email'}){
		#Generate bonuscode
		my @char=('a'..'z','A'..'Z','1'..'9');
		my $pass='';
    foreach(1..8){
      $pass.=$char[int(rand(60))];
    }
		$dbh->do("INSERT INTO SHOP(ID,URL,NAME,EMAIL,PASS,TEL) VALUES(NULL,\"$param->{'url'}\",\"$param->{'name'}\",\"$param->{'email'}\",\"$pass\",\"$param->{'tel'}\")");
		$self->mail(to=>$param->{'email'},
								subject=>'Регистрация партнера',
								data=>"Приветствуем!\nПоздравляем с регистрацией в BonusQuest.\n\nСайт $param->{'name'}, http://$param->{'url'}\n".
"Ваш пароль доступа: $pass\n\nДоступ к партнерской части будет открыт после подтверждения ваших данных.".$subscribe
								);
		$self->stash(capt=>'Спасибо за регистрацию',message=>'Дальнейшие инструкции отправлены на ваш адрес электронной почты.');
		return $self->render('/robot');
	}
	$self->stash(message=>$message);
	$self->render('partner_register');
};

get '/restore'=>sub{
	my $self=shift;
	$self->render('partner_restore');
};

post '/restore'=>sub{
	my $self=shift;
	my $param=$self->req->params->to_hash;
	$param->{'url'}=~s/(http:\/\/www\.)||(http:\/\/)||(www\.)//g;
	my $restore=$dbh->selectrow_arrayref("SELECT SHOP.EMAIL,SHOP.PASS FROM SHOP WHERE URL=\"$param->{'url'}\" AND EMAIL=\"$param->{'email'}\" AND SHOP.STATUS=1") || undef;
	if($restore->[0] && $param->{'url'} && $param->{'email'}){
		$self->mail(to=>$restore->[0],
								subject=>'Восстановление доступа',
								data=>"Приветствуем!\nВы или возможно кто-то другой попросил напомнить пароль доступа: $restore->[1]".$subscribe
								);
	}
	$self->stash(capt=>'Доступ на сайт',message=>'Инструкция о восстановлении пароля отправлена.');
	$self->render('robot');	
};

get '/quiz'=>sub{
	my $self=shift;
	return $self->redirect_to('/login') unless $self->session('pid');
	my $pid=$self->session('pid');
	my $url=$self->session('url');
	my $question=$dbh->selectall_hashref("SELECT QUESTION.ID,QUESTION.CONTENT,QUESTION.TYPE,QUESTION.QUIZ,COUNT(ANSWER.ID) AS ANSWERS FROM QUESTION LEFT JOIN ANSWER ON QUESTION.ID=ANSWER.QUESTIONID WHERE QUESTION.SHOPID=$pid GROUP BY QUESTION.ID",'ID');
	$self->stash(url=>$url,
							 pid=>$pid,
							 question=>$question);
	$self->render('partner_quiz');
};

post '/quiz'=>sub{
	my $self=shift;
	return $self->redirect_to('/login') unless $self->session('pid');
	my $pid=$self->session('pid');
	my $url=$self->session('url');
	my @questionid=$self->param('questionid');
	my $questid=$self->param('questid');#ID for single question
	my $content=$self->param('content');#Question content
	my $type=$self->param('type');
	my $answers=$self->param('answers');
	$answers=~s/\s\n/;/g;
	if(@questionid){
		$dbh->do("UPDATE QUESTION SET QUESTION.QUIZ=0 WHERE QUESTION.SHOPID=$pid");#Set quiz status to null
		foreach my $key(@questionid){
			$dbh->do("UPDATE QUESTION SET QUESTION.QUIZ=1 WHERE QUESTION.SHOPID=$pid AND QUESTION.ID=$key");
		}
	}if($content){
		if($questid){
			$dbh->do("UPDATE QUESTION SET QUESTION.CONTENT=\"$content\",QUESTION.TYPE=\"$type\",QUESTION.ANSWERS=\"$answers\" WHERE QUESTION.ID=$questid AND QUESTION.SHOPID=$pid");
		}else{
			$dbh->do("INSERT INTO QUESTION(ID,CONTENT,TYPE,ANSWERS,SHOPID,QUIZ) VALUES(NULL,\"$content\",\"$type\",\"$answers\",$pid,0)");
		}
	}
	my $question=$dbh->selectall_hashref("SELECT QUESTION.ID,QUESTION.CONTENT,QUESTION.TYPE,QUESTION.QUIZ,COUNT(ANSWER.ID) AS ANSWERS FROM QUESTION LEFT JOIN ANSWER ON QUESTION.ID=ANSWER.QUESTIONID WHERE QUESTION.SHOPID=$pid GROUP BY QUESTION.ID",'ID');
	$self->stash(url=>$url,
							 pid=>$pid,
							 question=>$question);
	$self->render('partner_quiz');
};

get '/question'=>sub{#Create new question in the form
	my $self=shift;
	return $self->redirect_to('/login') unless $self->session('pid');
	my $pid=$self->session('pid');
	my $url=$self->session('url');
	$self->stash(url=>$url);
	$self->render('partner_newquestion');
};

get '/question/:id'=>sub{#Edit question in the form
	my $self=shift;
	return $self->redirect_to('/login') unless $self->session('pid');
	my $pid=$self->session('pid');
	my $url=$self->session('url');
	my $questid=$self->param('id');
	my $question=$dbh->selectall_hashref("SELECT QUESTION.ID,QUESTION.CONTENT,QUESTION.TYPE,QUESTION.ANSWERS FROM QUESTION WHERE QUESTION.ID=$questid AND QUESTION.SHOPID=$pid",'ID');
	$self->stash(url=>$url,
							 question=>$question);
	$self->render('partner_question');
};

get '/orders'=>sub{
	my $self=shift;
	return $self->redirect_to('/login') unless $self->session('pid');
	my $pid=$self->session('pid');
	my $url=$self->session('url');
	my $orderstat=$dbh->selectall_arrayref("SELECT COUNT(ORDERS.ID) AS ID,SUM(STATUS=0),SUM(STATUS=1),SUM(STATUS=2) FROM ORDERS LEFT JOIN ANSWER ON ORDERS.ID=ANSWER.ORDERID LEFT JOIN QUESTION ON ANSWER.QUESTIONID=QUESTION.ID WHERE QUESTION.SHOPID=$pid");#Orders statistics
	my $orders=$dbh->selectall_hashref("SELECT ORDERS.ID,ORDERS.ORDERMONTH,ORDERS.NUMBER,ORDERS.SUMM,DATE(ORDERS.SYSDATE) AS SYSDATE FROM ORDERS LEFT JOIN ANSWER ON ORDERS.ID=ANSWER.ORDERID LEFT JOIN QUESTION ON ANSWER.QUESTIONID=QUESTION.ID WHERE ORDERS.STATUS=0 AND QUESTION.SHOPID=$pid",'ID');
	$self->stash(url=>$url,
							 orders=>$orders,
							 orderstat=>$orderstat);
	$self->render('partner_orders');
};

get '/orders/status/:orderstatus'=>sub{
	my $self=shift;
	return $self->redirect_to('/login') unless $self->session('pid');
	my $pid=$self->session('pid');
	my $url=$self->session('url');
	my $orderstatus=$self->param('orderstatus');
	my $orders=$dbh->selectall_hashref("SELECT ORDERS.ID,ORDERS.ORDERMONTH,ORDERS.NUMBER,ORDERS.SUMM,DATE(ORDERS.SYSDATE) AS SYSDATE FROM ORDERS LEFT JOIN ANSWER ON ORDERS.ID=ANSWER.ORDERID LEFT JOIN QUESTION ON ANSWER.QUESTIONID=QUESTION.ID WHERE ORDERS.STATUS=$orderstatus AND QUESTION.SHOPID=$pid",'ID');
	$self->stash(url=>$url,
							 orders=>$orders,
							 orderstatus=>$orderstatus);
	$self->render('partner_orderstatus');
};

post '/orders'=>sub{
	my $self=shift;
	return $self->redirect_to('/login') unless $self->session('pid');
	my $pid=$self->session('pid');
	my $url=$self->session('url');
	my $param=$self->req->params->to_hash;
	my $SQL='ORDERS.ID=0';
	foreach my $key(keys %{$param}){
		$SQL=$SQL.' OR ORDERS.ID='.$key;
	}
	#Select orders only SHOPID
	$SQL="SELECT ORDERS.ID FROM ORDERS LEFT JOIN ANSWER ON ORDERS.ID=ANSWER.ORDERID LEFT JOIN QUESTION ON ANSWER.QUESTIONID=QUESTION.ID WHERE ORDERS.STATUS=0 AND QUESTION.SHOPID=$pid AND ($SQL)";
	my $sth=$dbh->prepare($SQL);
	$sth->execute;
	while(my $ref=$sth->fetchrow_hashref){
		$dbh->do("UPDATE ORDERS SET ORDERS.STATUS=$param->{$ref->{'ID'}} WHERE ORDERS.ID=$ref->{'ID'}") if $param->{$ref->{'ID'}};
	}
	my $orderstat=$dbh->selectall_arrayref("SELECT COUNT(ORDERS.ID) AS ID,SUM(STATUS=0),SUM(STATUS=1),SUM(STATUS=2) FROM ORDERS LEFT JOIN ANSWER ON ORDERS.ID=ANSWER.ORDERID LEFT JOIN QUESTION ON ANSWER.QUESTIONID=QUESTION.ID WHERE QUESTION.SHOPID=$pid");#Orders statistics
	my $orders=$dbh->selectall_hashref("SELECT ORDERS.ID,ORDERS.ORDERMONTH,ORDERS.NUMBER,ORDERS.SUMM,DATE(ORDERS.SYSDATE) AS SYSDATE FROM ORDERS LEFT JOIN ANSWER ON ORDERS.ID=ANSWER.ORDERID LEFT JOIN QUESTION ON ANSWER.QUESTIONID=QUESTION.ID WHERE ORDERS.STATUS=0 AND QUESTION.SHOPID=$pid",'ID');
	$self->stash(url=>$url,
							 orders=>$orders,
							 orderstat=>$orderstat);
	$self->render('partner_orders');
};

app->start;